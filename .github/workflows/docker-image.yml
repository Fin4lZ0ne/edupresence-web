name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: '8.2'
  #         extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo
  #     - name: Copy .env.testing
  #       run: |
  #         cp .env.example .env.testing
  #         echo "DB_CONNECTION=sqlite" >> .env.testing
  #         echo "DB_DATABASE=database/database.sqlite" >> .env.testing
  #     - name: Install Dependencies
  #       run: composer install --no-interaction --prefer-dist
  #     - name: Generate key
  #       run: php artisan key:generate --env=testing
  #     - name: Directory Permissions
  #       run: chmod -R 777 storage bootstrap/cache
  #     - name: Create SQLite Database
  #       run: |
  #         mkdir -p database
  #         touch database/database.sqlite
  #     - name: Run PHPUnit Tests
  #       env:
  #         DB_CONNECTION: sqlite
  #         DB_DATABASE: database/database.sqlite
  #       run: |
  #         vendor/bin/phpunit --testsuite Unit
  #         vendor/bin/phpunit --testsuite Feature

  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: dvdardiansyahhh/edupresence-web:latest
      -
        name: install ssh keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/github-actions-key
          chmod 600 ~/.ssh/github-actions-key
          ssh-keyscan -p 10000 -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - 
        name: connect and pull
        run: |
          ssh -i ~/.ssh/github-actions-key -o StrictHostKeyChecking=no -p 10000 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
            cd ${{ secrets.WORK_DIR }} && \
            git checkout ${{ secrets.MAIN_BRANCH }} && \
            git branch --set-upstream-to=origin/${{ secrets.MAIN_BRANCH }} ${{ secrets.MAIN_BRANCH }} && \
            git pull"
      - 
        name: cleanup
        run: rm -rf ~/.ssh